<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sproject.dao.sign.SignDao">
	<select id="countMailReceivedOfMail" resultType="int">
		SELECT COUNT(*) FROM mail WHERE ml_type = 1
	</select>
	
	<insert id="insertMailOfMail" parameterType="com.example.sproject.model.mail.Mail">
		INSERT INTO mail(
				ml_num, ml_email, mlb_num, ml_title, ml_content, 
				ml_regdate, ml_rcvdate, ml_type, ml_is_read, ml_is_deleted
		)
		VALUES(
				#{ml_num}, #{ml_email}, #{mlb_num}, #{ml_title}, #{ml_content}, 
				#{ml_regdate}, #{ml_rcvdate, jdbcType = DATE}, #{ml_type}, #{ml_is_read}, #{ml_is_deleted}
		) 
	</insert>
	
	<select id= "countMaxMl_numOfMail" resultType="int">
		SELECT NVL(MAX(ml_num), 0) FROM mail
	</select>
	
	<insert id="insertMailFileOfMail" parameterType="com.example.sproject.model.mail.MailFile">
		INSERT INTO mail_file(
			ml_num, dv_id
		)
		VALUES (
			#{ml_num}, #{dv_id}
		)
	</insert>

	<insert id="insertMailToOfMail" parameterType="com.example.sproject.model.mail.MailTo">
		INSERT INTO mail_to(
			ml_num, ml_email
		)
		VALUES (
			#{ml_num}, #{ml_email}
		)
	</insert>	
	
	<select id="selectListMailReceivedOfMail" parameterType="com.example.sproject.model.mail.Mail" resultType="com.example.sproject.model.mail.Mail">
		<![CDATA[
		SELECT *
		FROM (SELECT ROWNUM rn, a.* FROM (
			SELECT ml.* FROM mail ml, mail_to mlt 
			WHERE ml.ml_num = mlt.ml_num AND mlt.ml_email LIKE #{ml_email} AND ml.ml_type = #{ml_type} AND ml.ml_is_deleted = #{ml_is_deleted}
			ORDER BY ml.ml_regdate desc			  		  
		) a) WHERE rn >= #{rn_start} and rn <= #{rn_end}
		]]>	
	</select>

	<select id="selectListMailSentOfMail" parameterType="com.example.sproject.model.mail.Mail" resultType="com.example.sproject.model.mail.Mail">
		<![CDATA[
		SELECT *
		FROM (SELECT ROWNUM rn, a.* FROM (
			SELECT ml.* FROM mail ml
			WHERE ml.ml_email LIKE #{ml_email} AND ml.ml_type = #{ml_type} AND ml.ml_is_deleted = #{ml_is_deleted}
			ORDER BY ml.ml_regdate desc			  		  
		) a) WHERE rn >= #{rn_start} and rn <= #{rn_end}
		]]>	
	</select>
	
	<select id="countTotalMailReceivedOfMail" parameterType="com.example.sproject.model.mail.Mail" resultType="int">
		SELECT COUNT(*) FROM mail ml, mail_to mlt 
		WHERE ml.ml_num = mlt.ml_num AND mlt.ml_email LIKE #{ml_email} AND ml.ml_type = #{ml_type} AND ml.ml_is_deleted = #{ml_is_deleted}
	</select>

	<select id="countTotalMailSentOfMail" parameterType="com.example.sproject.model.mail.Mail" resultType="int">
		SELECT COUNT(*) FROM mail ml
		WHERE ml.ml_email LIKE #{ml_email} AND ml.ml_type = #{ml_type} AND ml.ml_is_deleted = #{ml_is_deleted}
	</select>
	
	<select id="selectMailOfMail" parameterType="int" resultType="com.example.sproject.model.mail.Mail">
		SELECT ml.* FROM mail ml WHERE ml_num = #{ml_num}
	</select>

	<select id="selectListMailToOfMail" parameterType="int" resultType="com.example.sproject.model.mail.MailTo">
		SELECT mlt.* FROM mail_to mlt WHERE ml_num = #{ml_num}
	</select>	
	
	<select id="selectListDriveFileInofoOfMail" parameterType="int" resultType="com.example.sproject.model.drive.DriveFileInfo">
		SELECT d.* FROM drive d, mail_file mlf WHERE d.dv_id = mlf.dv_id AND mlf.ml_num = #{ml_num}
	</select>	

	<insert id="insertAllMailToOfMail" parameterType="Map">
		<foreach collection="listOfAddressTo" item="item" open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO mail_to(
				ml_num, ml_email
			) VALUES (
				#{ml_num}, #{item}
			)
		</foreach>
	</insert>
	
	<insert id="insertAllMailFileOfMail" parameterType="Map">
		<foreach collection="listOfDriveFileInfo" item="item" open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO mail_file(
				ml_num, dv_id
			) VALUES (
				#{ml_num}, #{item.dv_id}
			)
		</foreach>
	</insert>	
	
	<update id="updateMailReadOfMail" parameterType="int">
		UPDATE mail SET ml_is_read = 1 WHERE ml_num = #{ml_num}
	</update>
	
	<update id="deleteMailOfMail" parameterType="int">
		UPDATE mail SET ml_is_deleted = 1 WHERE ml_num = #{ml_num}
	</update>
	
	<update id="updateMl_rcvdateOfMail" parameterType="java.sql.Timestamp">
		UPDATE mail SET ml_rcvdate = #{nowTime} WHERE ml_num = 1
	</update>
	
	<select id="findUpdateDateOfDbOfMail" resultType="java.sql.Timestamp">
		SELECT ml_rcvdate FROM mail WHERE ml_num = 1
	</select>
	
</mapper>