<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sproject.dao.talk.TalkDao">

<insert id="insertMsgOfTalk" parameterType="com.example.sproject.model.talk.Talk">
	insert into talk(tkrm_num, tk_num, m_id, tk_content, tk_time_sent, tk_type) values(#{tkrm_num}, #{tk_num}, #{m_id}, #{tk_content}, sysdate, 1)
</insert>

<select id="selectOneMaxTk_numOfTalk" parameterType="int" resultType="int">
	SELECT NVL(MAX(tk_num),0) FROM talk WHERE tkrm_num = #{tkrm_num}
</select>

<select id="selectChatOfTalk" parameterType="int" resultType="Talk">
	SELECT m.m_name, t.tk_type, t.tk_num, t.m_id, t.tk_content, t.tk_time_sent from member m, talk t where t.m_id=m.m_id and tkrm_num = #{tkrm_num} order by tk_num
</select>

<select id="selectMemberListOfTalk" resultType="com.example.sproject.model.login.Member">
	select m_id, m_name from member where m_id != #{m_id} order by m_name
</select>

<insert id="insertTalkRoomOneByOneOfTalk">
	insert into talk_room(tkrm_num, tkrm_name, tkrm_type) values( (SELECT NVL(MAX(tkrm_num) + 1, 1) from talk_room), #{tkrm_name}, 1)
</insert>

<select id="selectRnOfOneByOneOfTalk" parameterType="Map" resultType="com.example.sproject.model.talk.Room">
	SELECT t1.tkrm_num FROM talker t1, talker t2, talk_room r WHERE (t1.tkrm_num = t2.tkrm_num AND t1.m_id = #{m_id} AND t2.m_id = #{m_id2}) AND t1.tkrm_num = r.tkrm_num AND r.tkrm_type = 1
</select>

<insert id="insertTalkerOfTalk" parameterType="com.example.sproject.model.talk.Talker">
	INSERT into talker(tkrm_num, m_id) values(#{tkrm_num}, #{m_id})
</insert>

<select id="selectRoomOfTalk" resultType="com.example.sproject.model.talk.Room" parameterType="int">
	select * from talk_room where tkrm_num=#{tkrm_num}
</select>

<select id="selectMaxRnOfTalk" resultType="int">
	SELECT MAX(tkrm_num) FROM talk_room
</select>

<select id="selectGroupRoomListOfTalk" resultType="com.example.sproject.model.talk.Room" parameterType="String">
	SELECT tr.tkrm_num, te.m_id, tr.tkrm_name from talker te, talk_room tr where tr.tkrm_num = te.tkrm_num and te.m_id=#{m_id}
</select>

<insert id="insertMakeGroupRoomOfTalk" parameterType="String">
	insert into talk_room(tkrm_num, tkrm_name, tkrm_type) values( (SELECT NVL(MAX(tkrm_num) + 1, 1) from talk_room), #{tkrm_name}, 2)
</insert>

<select id="selectJoinGroupMemberListOfTalk" parameterType="int" resultType="com.example.sproject.model.login.Member">
	select m.m_name from talk_room tr, talker te, member m where tr.tkrm_num=te.tkrm_num and te.m_id=m.m_id and tr.tkrm_num=#{tkrm_num} order by m.m_name
</select>

<select id="selectJoinMemberNameOfTalk" parameterType="String" resultType="String">
	select m_name from member where m_id=#{m_id}
</select>

<update id="updateFileImageOfTalk" parameterType="String">
	update talk set tk_type=2, tk_content=#{content} where tk_num=(select max(tk_num) from talk)
</update>

<select id="selectgetGroupTalkerListOfTalk" parameterType="int" resultType="String">
	select te.m_id from talk_room tr, talker te where tr.tkrm_num= te.tkrm_num and tr.tkrm_num=#{tkrm_num}
</select>

<insert id="talk_ReadingOfTalk" parameterType="com.example.sproject.model.talk.Talk_Reading">
	insert into talk_reading(tkrm_num, tk_num, m_id, tkrd_is_read) values(#{tkrm_num}, #{tk_num}, #{m_id}, 0)
</insert>

<update id="readMemberOfTalk" parameterType="Map">
	update talk_reading set tkrd_is_read = 1 where tkrd_is_read = 0 and m_id = #{m_id} and tkrm_num = #{roomNumber}
</update>

<select id="readNumberOfTalk" parameterType="Map" resultType="int">
	select count(*) from talk_reading where tk_num = #{tk_num} and tkrm_num = #{roomNumber} and tkrd_is_read = 0
</select>

<select id="selectTk_numListOfTalk" parameterType="int" resultType="com.example.sproject.model.talk.Talk_Reading">
	select tk_num from talk_reading where tkrm_num = #{roomNumber}
</select>

<select id="unreadCountListOfTalk" parameterType="int" resultType="com.example.sproject.model.talk.Talk_Reading">
	SELECT tk_num, COUNT(tk_num) - SUM(tkrd_is_read) unread_num FROM talk_reading WHERE tkrm_num = #{roomNumber} GROUP BY tk_num
</select>

<select id="selectAllUnreadCountOfTalk" parameterType="String" resultType="int">
	select count(*) allUnreadCount from talk_reading where m_id=#{m_id} and tkrd_is_read=0
</select>

<select id="selectRnUnreadNumOfTalk" parameterType="Map" resultType="int">
	select count(*) from talk_reading where tkrm_num=#{tkrm_num} and m_id=#{m_id} and tkrd_is_read=0
</select>
</mapper>